 @startuml
'https://plantuml.com/sequence-diagram
skinparam classAttributeIconSize 0

class Schedule {
    - startHour : int
    - endHour : int
    - workingDays : EnumSet<DayOfWeek>
    + setWorkingHours(startHour : int, endHour : int)
    + setWorkingDays(workingDays : EnumSet<DayOfWeek>)
    + canSendRequests(now : LocalDateTime) : boolean
}

class DirectoryUserGroups {
- userGroups : ArrayList<UserGroup>
+ makeUserGroups()
+ findUserByCredential(credential : String) : User
- findOrCreateUserGroup(role : String) : UserGroup
}

abstract class UserGroup {
    - role : String
    - startDate : LocalDateTime
    - endDate : LocalDateTime
    - workingDays : EnumSet<DayOfWeek>
    - startHour : int
    - endHour : int
    + setUsers(user : User)
    + setWorkingHours(startHour : int, endHour : int)
    + setWorkingDays(workingDays : EnumSet<DayOfWeek>)
    + setDateRange(startDate : LocalDateTime, endDate : LocalDateTime)
    + findUserByCredential(credential : String) : User
    + getRole() : String
    + canSendRequests(now : LocalDateTime) : boolean
    + canBeInSpaceAndDoAction(toSpace : Area,action : String) : boolean
}

class User {
    - name : String
    - credential : String
}

class UserGroupAdministrator extends UserGroup{

}
class UserGroupBlank extends UserGroup{

}
class UserGroupEmployee extends UserGroup{

}
class UserGroupManager extends UserGroup{

}
class UserGroupSystem extends UserGroup{

}
DirectoryUserGroups  -->  UserGroup : userGroups
UserGroup  -->  User : users

UserGroup --> Schedule : schedule
@enduml